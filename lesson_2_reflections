What happens when you initialize a repository? Why do you need to do it?

> When you initialize a repository git creates a set of hidden files that will
be used to track the content of the directory.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

> The staging area is the location that allows you to check the changes before
they are committed to the repository. I provides additional checkpoint to make
sure that the right change will be committed.

How can you use the staging area to make sure you have one commit per logical
change?

> I can use git diff to verify the difference between the staging area and the
last commit.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

> When I need to work in parallel on changes related to different fixes or
releases branches help organize my work. New changes will not impact software
release that is already stable.

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
