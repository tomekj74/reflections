How did viewing a diff between two versions of a file help you see the bug that
was introduced?

> I can look at commit message to first identify changes that could be related
to the bug. Once I narrow down the list of potential offenders I would use diff
to examine each change one by one and identify the root cause of the bug.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

> Easy access to the entire history allows you more freedom to experiment with
more risky changes. You can always roll back to the previous version. You also
know all the changes made to the file and why they were made.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

> Having control over when the commit is made gives me more flexibility. I can
decide what is the right content for each commit. This is important for
maintainability of the project in the future.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

> When each file is used as independently it makes sense to commit changes to
each file separately. On the other hand in the software project it is important
that changes to each file are synchronized since files depend on each other.
Thus it is necessary to save the state of each file in the project together.

How can you use the commands git log and git diff to view the history of files?

    Fill in your answer here

How might using version control make you more confident to make changes that
could break something?

    Fill in your answer here

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer here
